/* An alternative way to find shortest path in general graph. 
Better than DFS( O(n*(n+m))).
*/
lli n, m, u, v, c, ans ;
vector<vpii> adj ;
vlli dist ;

bool bellmanFord()
  {
    dist.assign(n+1, 0) ;
    for(int i=0 ; i<n-1 ; i++)
      for(int u=1 ; u<=n ; u++)
        for(auto v:adj[u])
          dist[v.fi]=min(dist[v.fi], dist[u]+v.se) ;
    for(int u=1 ; u<=n ; u++)
      for(auto v:adj[u])
        if(dist[v.fi]>dist[u]+v.se)
          return true ;
    return false ;
  }
